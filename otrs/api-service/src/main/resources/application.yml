info:
  component: API Service

spring:
    application:
        name: api-service
    aop:
        proxyTargetClass: true
    cloud:
        config:
            enabled: false
server:
  port: 7771
#  ssl:
#    key-store: classpath:keystore.jks
#    key-store-password: password
#    key-password: password

security:
  oauth2:
    clientId: client
    clientSecret: password
    userAuthorizationUri: https://localhost:9001/oauth/authorize
    grant-type: password
    scope: apiAccess
    access-token-uri: https://localhost:9001/oauth/token
    resource:
      userInfoUri: https://localhost:9001/user
    authorization:
      checkTokenAccess: http://localhost:9001/oauth/check_token
  basic:
    enabled: false

management:
  security:
    enabled: false

hystrix:
  threadpool:
    default:
      # Maximum number of concurrent requests when using thread pools (Default: 10)
      coreSize: 100
      # Maximum LinkedBlockingQueue size - -1 for using SynchronousQueue (Default: -1)
      maxQueueSize: -1
      # Queue size rejection threshold (Default: 5)
      queueSizeRejectionThreshold: 5
  command:
    default:
      circuitBreaker:
        sleepWindowInMilliseconds: 30000
        requestVolumeThreshold: 2
      execution:
        isolation:
#          strategy: SEMAPHORE, no thread pool but timeout handling stops to work
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 6000

#ribbon:
#  ConnectTimeout: 100
#  ReadTimeout: 3000

app:
  ConnectTimeout: 100
  ReadTimeout: 5000

eureka:
    instance:
        leaseRenewalIntervalInSeconds: 3
        metadataMap:
            instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
    client:
        # Default values comes from org.springframework.cloud.netflix.eurek.EurekaClientConfigBean
        registryFetchIntervalSeconds: 5
        instanceInfoReplicationIntervalSeconds: 5
        initialInstanceInfoReplicationIntervalSeconds: 5
        fetchRegistry: true
        serviceUrl:
            defaultZone: ${vcap.services.${PREFIX:}eureka.credentials.uri:http://user:password@localhost:8761}/eureka/

logging:
  level:
    root: WARN
    com.packtpub.mmj: DEBUG
    # Set DEBUG level on Hystrix to get an error message when a fallback method is used.
    com.netflix.hystrix: DEBUG
